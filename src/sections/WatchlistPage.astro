---
import EmptyResponse from "@components/EmptyResponse.astro"
import Grid from "@components/Grid.astro"
import Row from "@components/Row.astro"
import Section from "@components/Section.astro"
import { COOKIES } from "@consts/cookies"

import type { AnimeData } from "@interfaces/animeResponse"
import { supabase } from "@supabase/supabase"

interface LoaderData {
	watchlistList: AnimeData[]
	emptyText: {
		title: string
		text: string
	}
}
const loader = async (): Promise<LoaderData> => {
	const emptyText = {
		title: "Ops!",
		text: "🙁 Aún no tienes series en tu lista de pendientes",
	}

	const userId = Astro.cookies.get(COOKIES.USERID)?.value
	const { data: watchlist, error } = await supabase
		.from("watchlist")
		.select("show")
		.eq("user_id", userId)

	if (error) {
		// TODO Handle Error
		console.log("ERROR", error)
	}

	const watchlistList: AnimeData[] = watchlist?.map((item) => item.show) || []
	return { watchlistList, emptyText } as LoaderData
}

const { watchlistList, emptyText } = await loader()
const buttonText = "VIENDO"
---

<Section title="Pendientes">
	<Grid>
		{
			watchlistList.length > 0 ? (
				watchlistList.map((show) => (
					<Row
						show={show}
						title={show.title}
						text=""
						image={show.images.webp.image_url}
						from="watchlist"
						to="watching"
					/>
				))
			) : (
				<EmptyResponse title={emptyText.title} text={emptyText.text} />
			)
		}
	</Grid>
</Section>
