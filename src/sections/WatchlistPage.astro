---
import EmptyResponse from "@components/EmptyResponse.astro"
import Row from "@components/Row.astro"
import Section from "@components/Section.astro"
import type { AnimeData } from "@interfaces/animeResponse"
import { Watchlist as WatchlistDB, db, eq } from "astro:db"

interface WatchingInterface {
	userId: number
	malId: number
	malItem: AnimeData
}

interface LoaderData {
	watchlistList: WatchingInterface[]
	emptyText: {
		title: string
		text: string
	}
}

const loader = async (): Promise<LoaderData> => {
	const emptyText = {
		title: "Ops!",
		text: "üôÅ A√∫n no tienes series en tu lista de pendientes",
	}
	const watchingList: WatchingInterface[] | null = (await db
		.select()
		.from(WatchlistDB)
		.where(eq(WatchlistDB.userId, 1))) as WatchingInterface[] | null

	return { watchlistList: watchingList, emptyText } as LoaderData
}

const { watchlistList, emptyText } = await loader()
const buttonText = "VIENDO"
---

<Section title="Viendo">
	{
		watchlistList.length > 0 ? (
			watchlistList.map(({ malItem }) => (
				<Row
					title={malItem.title}
					text={malItem.synopsis}
					image={malItem.images.webp.image_url}
					buttonText={buttonText}
				/>
			))
		) : (
			<EmptyResponse title={emptyText.title} text={emptyText.text} />
		)
	}
</Section>
